{"dependencies":[{"name":"/Users/du/Documents/code/grace/package.json","includedInParent":true,"mtime":1520992428037},{"name":"./bind.js","loc":{"line":1,"column":21}},{"name":"./http.js","loc":{"line":2,"column":17}},{"name":"./mixin.js","loc":{"line":3,"column":18}},{"name":"./event-bus.js","loc":{"line":4,"column":17}}],"generated":{"js":"var global = (1,eval)(\"this\");\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _bind = require(\"./bind.js\");\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _http = require(\"./http.js\");\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _mixin = require(\"./mixin.js\");\n\nvar _mixin2 = _interopRequireDefault(_mixin);\n\nvar _eventBus = require(\"./event-bus.js\");\n\nvar _eventBus2 = _interopRequireDefault(_eventBus);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//拦截context.setData，同步代理数据\nfunction hook(context) {\n    var realFun = context.setData;\n    //y,z为预留参数\n    function hookFun(ob, x, y, z) {\n        if (x || y || z) {\n            return realFun.call(context, ob, x, y);\n        } else {\n            context.$data = ob;\n        }\n    }\n    //防止多次hook\n    if (realFun.toString() !== hookFun.toString()) {\n        Object.defineProperty(context, \"setData\", {\n            get: function get() {\n                return hookFun;\n            }\n        });\n    }\n}\nvar $http = new _http2.default();\nfunction component(ob) {\n    (0, _mixin2.default)(ob, {\n        ready: function ready(option) {\n            hook(this);\n            (0, _bind2.default)(this);\n            this.$http = $http;\n            this.$bus = _eventBus2.default;\n        }\n    });\n    Component(ob);\n}\n\nfunction page(ob) {\n    var backEvent = \"_back-data\";\n    (0, _mixin2.default)(ob, {\n        onLoad: function onLoad(option) {\n            var _this = this;\n\n            global.id = global.id || 1;\n            this.$id = global.id++;\n            hook(this);\n            (0, _bind2.default)(this);\n            this.$http = $http;\n            this.$bus = _eventBus2.default;\n            _eventBus2.default.$on(backEvent, function (id, data) {\n                if (id == _this.$id) {\n                    if (_this.$onBackData) {\n                        _this.$onBackData.call(_this, data);\n                    }\n                }\n            });\n        },\n        onHide: function onHide() {\n            //页面在后台时缓存数据变化\n            var d = this.$data;\n            d.$hide = true;\n            d.$cache();\n        },\n        onShow: function onShow() {\n            //页面转到前台时，提交数据变化\n            var d = this.$data;\n            d.$hide = false;\n            d.$commit();\n        },\n        $goBack: function $goBack(data, delta) {\n            delta = delta > 0 ? delta : 1;\n            if (data !== undefined) {\n                var stack = getCurrentPages();\n                var len = stack.length - delta - 1;\n                if (len < -1) len = 0;\n                if (len >= 0) {\n                    //当只有一个页面时,len==-1,不触发\n                    _eventBus2.default.$emit(backEvent, stack[len].$id, data);\n                }\n            }\n            wx.navigateBack({\n                delta: delta\n            });\n        }\n    });\n    Page(ob);\n}\n\nexports.default = {\n    page: page,\n    component: component,\n    mixin: _mixin2.default,\n    bus: _eventBus2.default,\n    http: $http,\n    createHttpClient: function createHttpClient() {\n        return new _http2.default();\n    }\n};"},"hash":"d35101c09d3740fb1aa62a2709de3aa1","cacheData":{"env":{}}}